name: build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.1
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build binary
      run: make build

  darwin:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.1
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build binary
      env:
        GOOS: darwin
        GOARCH: amd64
      run: make build

  freebsd:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.1
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build binary
      env:
        GOOS: freebsd
        GOARCH: amd64
      run: make build

  openbsd:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.1
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build binary
      env:
        GOOS: openbsd
        GOARCH: amd64
      run: make build

  windows:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.1
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build binary
      env:
        GOOS: windows
        GOARCH: amd64
      run: make build

  docker:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build 'dev' Docker image
      if: "!contains(github.ref, 'refs/heads/master')"
      run: DOCKER_TAG=${{ github.sha }} make docker

    - name: Build and push 'edge' Docker image
      if: "contains(github.ref, 'refs/heads/master')"
      run: |
        echo ${REGISTRY_PASSWORD} | docker login -u ${REGISTRY_USERNAME} --password-stdin quay.io
        DOCKER_TAG=edge make docker push
      env:
        REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
